version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: pterodash-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: pterodash
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - pterodash-dev-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: pterodash-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/pterodash?authSource=admin
      JWT_SECRET: dev-jwt-secret-key
      PTERO_BASE_URL: http://your-pterodactyl-panel:8080
      PTERO_APP_API_KEY: your-pterodactyl-api-key
      FRONTEND_URL: http://localhost:3000
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - pterodash-dev-network
    command: npm run dev

  # Frontend Dashboard (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: pterodash-frontend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_BASE: http://localhost:4000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - pterodash-dev-network
    command: npm run dev

volumes:
  mongodb_dev_data:
    driver: local

networks:
  pterodash-dev-network:
    driver: bridge
