name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm install
      env:
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test-secret
        NODE_ENV: test
    
    - name: Check backend scripts
      run: |
        cd backend
        npm run
      continue-on-error: true
    
    - name: Run backend tests (if available)
      run: |
        cd backend
        if npm run | grep -q "test"; then
          npm test
        else
          echo "No test script found, skipping tests"
        fi
      env:
        MONGODB_URI: mongodb://localhost:27017/test
        JWT_SECRET: test-secret
        NODE_ENV: test

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_BASE: http://localhost:4000

  # lint job removed per request

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd backend && npm install
        cd ../frontend && npm install
    
    - name: Run security audit
      run: |
        cd backend && npm audit --audit-level moderate || true
        cd ../frontend && npm audit --audit-level moderate || true

